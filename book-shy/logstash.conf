input {
  # TCP 입력 - Spring Boot 애플리케이션에서 직접 로그 전송 시 사용
  tcp {
    port => 5000
    codec => json  # JSON 형식의 로그 처리
  }

  # Beats 입력 - Filebeat에서 로그 수집 시 사용 (필요 시 활성화)
  beats {
    port => 5044
  }
}

filter {
  if [message] {
    # 원본 메시지 보존
    mutate {
      add_field => { "orig_message" => "%{message}" }
    }

    # 타임스탬프 처리 (Spring Boot 애플리케이션의 JSON 로그에서 타임스탬프 필드가 있는 경우)
    if [timestamp] {
      date {
        match => [ "timestamp", "ISO8601" ]
        target => "@timestamp"
      }
    }

    # 애플리케이션 이름이 없는 경우 추가
    if ![application] {
      mutate {
        add_field => { "application" => "backend" }
      }
    }

    # 로그 레벨에 따른 태그 추가
    if [level] {
      if [level] == "ERROR" or [level] == "FATAL" {
        mutate {
          add_tag => ["error"]
        }
      } else if [level] == "WARN" {
        mutate {
          add_tag => ["warning"]
        }
      } else if [level] == "DEBUG" {
        mutate {
          add_tag => ["debug"]
        }
      }
    }
  }
}

output {
  # Elasticsearch로 로그 전송
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "shy-backend-%{+YYYY.MM.dd}"  # 프로젝트명-애플리케이션-날짜 형식의 인덱스
  }

  # 개발 중 디버깅을 위한 표준 출력 (필요시 주석 해제)
  # stdout {
  #   codec => rubydebug
  # }
}